import os, struct, json, zlib

print("AMB TPL Serializer by: JackLSummer15")

#make output directory
try:
  os.mkdir('amb')

except:
  pass

if __name__ == '__main__':
  with open('amb_inject.json') as inputfile:
    obj = json.load(inputfile)
  codenames = obj[0]['maps']
  ambsounds = obj[0]['ambs']

  file_count = 0

  for i, codename in enumerate(codenames, 1):
    for ambsfx in ambsounds:
            
      codenamelow=codename.lower()

      ambname='amb_'+codenamelow+'_'+ambsfx.lower()

      path='world/jd5/'+codenamelow+'/audio/amb/'
      ambwav=ambname+'.wav'
      ambtpl=ambname+'.tpl.ckd'

      amb=open("amb/"+ambtpl,"wb")

      print("making "+codename+' + '+ambsfx+'...')

      #header

      amb.write(b'\x00\x00\x00\x01\x00\x00\x02\xB8\x1B\x85\x7B\xCE\x00\x00\x00\xAC\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xD9\x4D\x6C\x53\x00\x00\x00\xA4\x00\x00\x00\x01\x00\x00\x01\x10\xA7\x81\xF7\x9E\x00\x00\x00\x00\xEB\x53\x7A\x60\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01')
      #making path

      amb.write(struct.pack(">I",len(path))+path.encode('utf-8')+struct.pack(">I",len(ambwav))+ambwav.encode('utf-8')+struct.pack("<I",zlib.crc32(ambwav.encode('utf-8'))))

      #ending
      amb.write(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x64\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

      amb.close()

